{
  "name": "Intercept",
  "tagline": "An app for proxying network requests and mocking responses. Built with Electron :)",
  "body": "## How can I get it?\r\n\r\nYou can download the application via the [releases folder on Google Drive](https://drive.google.com/open?id=0Bz0vO0I2O7rtZDZHRHNEUTJHeXc)* or alternatively you can build it yourself using the Gulp build in the source.\r\n\r\n\\* *Please note that the application has only been tested on macOS and the Windows and Linux builds are considered unstable and untested.*\r\n\r\n## What does it do?\r\n\r\nThis app allows you to proxy network requests and mock responses based on rule sets.\r\n\r\n## Why would you want to use it?\r\n\r\nIf you are working with APIs that are not built, or need to modify a response from an API to preview how changes to the API will affect the UI, this is the tool for you.\r\n\r\nIt is also open source and free!\r\n\r\n## How to use it\r\n\r\n### Set up proxy server and target\r\n\r\nOpen the settings panel:\r\n\r\n[![Settings Panel](assets/images/settings.png)](assets/images/settings.png)\r\n\r\nSet the proxy server port to the port number that you want to access the proxied site on. For example if you want to access the proxied site on `localhost:8080` input `8080`.\r\n\r\nNext set the proxy target host and port number. The proxy target can be local (in which case use `localhost`) or an external site, however the external site may block your requests. Again, set the port that you want to proxy on the target host (the standard web port is `80`).\r\n\r\n### Set up rules\r\n\r\nOpen the rules panel and either click the add button to create a new rule or click an existing rule to edit it:\r\n\r\n[![Rules Panel](assets/images/rules-list.png)](assets/images/rules-list.png)\r\n\r\nThe rule editor will look as follows:\r\n\r\n[![Rule Editor](assets/images/rule-editor.png)](assets/images/rule-editor.png)\r\n\r\nBegin setting up the Intercept rule by inputting the URL to match (currently has to match exactly, there are future plans to add Regex support). Set the Request Method (from the list of HTTP verbs) and your rule is set!\r\n\r\nNext, you need to set the response parameters including content type, status code, headers, latency simulation, and finally the actual content for the response. This content can be served from a file on your file system or can be input directly as shown above.\r\n\r\n### View requests\r\n\r\nIn the requests panel you can now view requests that pass through the proxy in realtime, with latency information:\r\n\r\n[![Request List Unfiltered](assets/images/request-list-unfiltered.png)](assets/images/request-list-unfiltered.png)\r\n\r\nThis list can be filtered:\r\n\r\n[![Request List Filtered](assets/images/request-list-filtered.png)](assets/images/request-list-filtered.png)\r\n\r\n### Enjoy!\r\n\r\nI hope this tool is as useful to you as it was fun to build!\r\n\r\n## Feel free to contribute!\r\n\r\nIf you would like a feature, please request it! Even better, submit a PR!\r\n\r\n## Current limitations\r\n\r\n* The matching rules currently don't allow regexes, or multiple request methods.\r\n* The proxy cannot proxy on a HTTPS server, so only HTTP requests are currently supported.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}